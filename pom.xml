<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 
        FIXME: Replace deprecated cids-parent by cismet-parent
    -->
    <parent>
        <groupId>de.cismet.cids</groupId>
        <artifactId>cids-parent</artifactId>
        <version>8.0</version>
    </parent>

    <groupId>de.cismet.commons</groupId>
    <artifactId>cismet-commons</artifactId>
    <version>8.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    
    <properties>
        <names.cismet-commons>cismet Commons</names.cismet-commons>
    </properties>
    
    <name>${names.cismet-commons} [${project.version}]</name>
    <description>Common Tools and Utilities for cismet development</description>
    
    <scm>
        <connection>https://github.com/cismet/cismet-commons.git</connection>
        <developerConnection>scm:git:git@github.com:cismet/cismet-commons.git</developerConnection>
        <url>https://github.com/cismet/cismet-commons</url>
        <tag>HEAD</tag>
    </scm>
    
    <ciManagement>
        <system>jenkins</system>
        <url>https://ci.cismet.de/job/cismet-commons/</url>
    </ciManagement>
    
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/cismet/cismet-commons/issues</url>
    </issueManagement>
    
    <dependencyManagement>  
        <!-- IMPORT of cismet-ext-bom -->
        <dependencies>
            <dependency>
                <groupId>de.cismet</groupId>
                <artifactId>cismet-ext-bom</artifactId>
                <version>8.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- 
                TODO integrate into in dependency management section of ext-libs-bom!
            -->
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.6</version>
            </dependency>
        </dependencies>
    </dependencyManagement> 
    
    
    <dependencies>
        <!-- BEGIN: managed dependencies -->
        <!-- jcl-over-slf4j logging bridge is needed to avoid commons-logging compatibility problems  -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vividsolutions</groupId>
            <artifactId>jts</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-util</artifactId>
        </dependency>
        <dependency>
            <groupId>org.netbeans.api</groupId>
            <artifactId>org-openide-util-lookup</artifactId>
        </dependency>
        <dependency>
            <!-- won't update to jdom2 because of bigger changes and some issues -->
            <groupId>org.jdom</groupId>
            <artifactId>jdom-legacy</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-server</artifactId>
            <!--
                Jetty uses org.mortbay.jetty:servlet-api instead of javax.servlet:servlet-api :-(
            -->
            <!--<exclusions>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>-->
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>jai</groupId>
            <artifactId>jai-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>jai</groupId>
            <artifactId>jai-core</artifactId>
        </dependency>
        <!-- set to compile since it's needed during build -->
        <dependency>
            <groupId>net.postgis</groupId>
            <artifactId>postgis-jdbc</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>de.cismet.custom</groupId>
            <artifactId>cismet-deegree2.3</artifactId>
        </dependency>
        <dependency>
            <groupId>xml-apis</groupId>
            <artifactId>xml-apis</artifactId>
        </dependency>
        <!-- END: managed dependencies -->
        
        <!-- BEGIN: unmanaged dependencies -->
        <dependency>
            <groupId>net.sourceforge</groupId>
            <artifactId>blowfishj</artifactId>
            <version>2.14</version>
        </dependency>
        <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-webdav</artifactId>
            <version>2.1.1</version>
        </dependency>
        <dependency>
            <groupId>com.drewnoakes</groupId>
            <artifactId>metadata-extractor</artifactId>
            <version>2.8.1</version>
        </dependency>
<!--        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.1</version>
        </dependency>-->
        <!-- END: unmanaged dependencies -->
         
        <!-- BEGIN: runtime dependencies -->
        <!--
            WARNING: Proprietary imageio library!
        -->
        <dependency>
            <groupId>jai</groupId>
            <artifactId>jai-imageio</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- END: runtime dependencies -->
        
        <!-- BEGIN: test dependencies -->
        <dependency>
            <groupId>xmlunit</groupId>
            <artifactId>xmlunit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-xml</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.xml.stream</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-xml-provider</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>javax.xml.stream</groupId>
                    <artifactId>stax-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- END: test dependencies -->
    </dependencies>

    <build>
        <!--
            Example maven-jar-plugin configuration to specificy a main class for jar maanifest
            This configuration is *merged* with the default configuration specified in the
            pluginManagement Section of cismet-parent!
        -->
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <configuration>
                        <archive>
                            <manifest>
                                <mainClass>de.cismet.tools.PasswordEncrypter</mainClass>
                            </manifest>
                        </archive>
                        <!--
                            Exclude resopurces required by ClassPathInfoTest and MultiPagePictureReaderTest from test-jar since 
                            this test does not work from inside a jar file in upstream projects!
                        -->
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                            <configuration>
                                <excludes>
                                    <exclude>**/*.jar</exclude>
                                    <!--<exclude>**/*.jpg</exclude>-->
                                    <!--<exclude>**/*.tif</exclude>-->
                                </excludes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <finalName>cismetCommons</finalName>
    </build>
</project>
